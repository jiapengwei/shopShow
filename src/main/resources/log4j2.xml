<?xml version="1.0" encoding="UTF-8"?>
<!-- Log4j 2.x 配置文件。每30秒自动检查和应用配置文件的更新； -->
<!--
    status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出
    monitorInterval : Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。
    注：本配置文件的目标是将不同级别的日志输出到不同文件，最大80MB一个文件，
    文件数据达到最大值时，旧数据会被压缩并放进指定文件夹
-->
<Configuration status="warn" monitorInterval="30" strict="true" schema="Log4J-V2.2.xsd">

    <!-- 在此可以配置系统日志目录 TODO -->
    <properties>
        <property name="LOG_HOME">D:/logs</property>
    </properties>

    <Appenders>
        <!--输出日志的格式
          %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
          %p : 日志输出格式
          %c : logger的名称
          %m : 日志内容，即 logger.info("message")
          %n : 换行符
          %r 指的是程序运行至输出这句话所经过的时间（以毫秒为单位）；
          %t 指的是发起这一log request的线程名称；
          %C : Java类名
          %F 输出所在的类文件名，如Client.java
          %L : 日志输出所在行数
          %M : 日志输出所在方法名
       -->
        <!-- console控制台 日志 -->
        <Console name="ConsoleAppender" target="SYSTEM_OUT">
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}:%4p %t (%F:%L) - %m%n"/>
        </Console>

        <!-- info日志 输出到文件，按天或者超过80MB分割 -->
        <RollingFile name="RollingFileAppender" fileName="${LOG_HOME}/log.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/log-%d{yyyy-MM-dd}-%i.log.gz">
            <!-- 需要记录的级别 -->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}:%4p %t (%F:%L) - %m%n"/>
            <Policies>
                <OnStartupTriggeringPolicy/>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="80 MB"/>
            </Policies>
        </RollingFile>

        <!-- error日志 输出到文件，按天或者超过80MB分割 -->
        <RollingFile name="ErrorRollingFileAppender" fileName="${LOG_HOME}/error.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log.gz">
            <!-- 需要记录的级别 -->
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}:%4p %t (%F:%L) - %m%n"/>

            <Policies>
                <OnStartupTriggeringPolicy/>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="80 MB"/>
            </Policies>
        </RollingFile>

        <Async name="ASYNC">
            <AppenderRef ref="ConsoleAppender"/>
            <AppenderRef ref="RollingFileAppender"/>
            <AppenderRef ref="ErrorRollingFileAppender"/>
        </Async>

    </Appenders>

    <Loggers>
        <!-- 全局配置 -->
        <Root level="error">
            <AppenderRef ref="ASYNC"/>
        </Root>

        <!-- 工程目录配置-->
        <Logger name="com.niceKou" level="info" additivity="false">
            <AppenderRef ref="ConsoleAppender"/>
            <AppenderRef ref="RollingFileAppender"/>
            <AppenderRef ref="ErrorRollingFileAppender"/>
        </Logger>
    </Loggers>
</Configuration>